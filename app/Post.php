<?php

namespace App;

use App\Scopes\DeleteScope;
//use App\Scopes\LatestScope;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Support\Facades\Cache;

class Post extends Model
{
    use SoftDeletes;
    protected $dates=['deleted_at'];
    protected $fillable = ['title','content','user_id'];
    //
    public function comment(){
        return $this->morphMany(Comment::class,'commentable');
//        return $this->hasMany(Comment::class)->Comment();        // comment() Scope name in the Comment Model
    }
    public function tags(){
      return $this->belongsToMany(Tag::class)->withTimestamps();
}


    public function user(){
        return $this->belongsTo('App\User');
    }

    public function image(){
        return $this->morphOne(Image::class,'imageable');
    }



    public function scopePosts(Builder $query){                // Local Scope
      return  $query->orderBy(static::CREATED_AT,'desc');
    }

    public function scopeLatestWithRelations(Builder $query){
        return $query->latest()->withCount('comment')->with('user','tags');
    }

    public function scopeMostCommented(Builder $query){
        return $query->withCount('comment')->orderBy('comment_count','desc');
        //من الكبير للصغير
    }


    public static function boot()
    {
        static::addGlobalScope(new DeleteScope());

        parent::boot(); // TODO: Change the autogenerated stub

        static::deleting(function (Post $post){
            $post->comment()->delete();

    });
        static::updating(function (Post $post){
            Cache::forget("post-{$post->id}");
        });
    }
}
